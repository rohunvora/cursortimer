[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cursor-eta"
version = "0.1.0"
description = "ETA indicators for cursor AI coding tasks"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "Your Name", email = "your.email@example.com"},  # TODO: Update
]
keywords = ["cursor", "eta", "progress", "ai", "coding", "assistant"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",
]
dependencies = [
    "psutil>=5.9.0",
    "typing-extensions>=4.0.0;python_version<'3.9'",
]

[project.urls]
Homepage = "https://github.com/yourusername/cursor-eta-indicator"
Documentation = "https://cursor-eta.github.io"
Repository = "https://github.com/yourusername/cursor-eta-indicator"
"Bug Tracker" = "https://github.com/yourusername/cursor-eta-indicator/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "types-psutil",
    "flake8>=6.0.0",
    "flake8-docstrings>=1.7.0",
    "flake8-bugbear>=23.0.0",
    "flake8-comprehensions>=3.10.0",
    "bandit[toml]>=1.7.5",
    "coverage[toml]>=7.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
demo = [
    "rich>=13.0.0",
    "click>=8.0.0",
]

[project.scripts]
cursor-eta = "cursor_eta.__main__:main"

[tool.setuptools]
packages = ["cursor_eta"]

[tool.setuptools.package-data]
cursor_eta = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | vscode-extension
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
known_first_party = ["cursor_eta"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "psutil.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--verbose",
    "--cov=cursor_eta",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["cursor_eta"]
omit = [
    "*/tests/*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
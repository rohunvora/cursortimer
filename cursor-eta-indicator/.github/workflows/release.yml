name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run (do not publish)'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  contents: read
  id-token: write  # Required for trusted publishing

jobs:
  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/cursor-eta
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for version detection
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: |
          twine check dist/*
          echo "Package contents:"
          tar -tzf dist/*.tar.gz | head -20
          echo "..."
          echo "Wheel info:"
          unzip -l dist/*.whl | head -20
      
      - name: Publish to Test PyPI (dry run)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'true'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          echo "DRY RUN: Publishing to Test PyPI..."
          twine upload --repository testpypi dist/* --verbose
      
      - name: Publish to PyPI
        if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run == 'false')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
      
      - name: Upload release assets
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
          fail_on_unmatched_files: true

  verify-release:
    name: Verify Release
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: github.event_name == 'release'
    
    steps:
      - name: Wait for PyPI to update
        run: sleep 60
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install from PyPI
        run: |
          pip install cursor-eta==${{ github.event.release.tag_name }}
          cursor-eta --version
      
      - name: Test imports
        run: |
          python -c "from cursor_eta import AgentETATracker, AgentWrapper, track_agent"
          python -c "import cursor_eta; print(f'Version: {cursor_eta.__version__}')"
      
      - name: Run smoke test
        run: cursor-eta --demo --complexity simple
        timeout-minutes: 1

  create-github-release:
    name: Create GitHub Release Notes
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: github.event_name == 'release'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Extract changelog section
        id: changelog
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          VERSION_PATTERN="## \[?${VERSION#v}\]?"
          
          # Extract the changelog section for this version
          awk -v ver="$VERSION_PATTERN" '
            $0 ~ ver {flag=1; next}
            /^## \[/ && flag {exit}
            flag {print}
          ' CHANGELOG.md > release_notes.md
          
          echo "Release notes:"
          cat release_notes.md
      
      - name: Update release description
        uses: softprops/action-gh-release@v1
        with:
          body_path: release_notes.md
          append_body: true
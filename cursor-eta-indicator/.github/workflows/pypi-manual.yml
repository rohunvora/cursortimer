name: Publish to PyPI (Manual/Token)

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Deployment target'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi
      skip_test:
        description: 'Skip TestPyPI step'
        required: false
        default: false
        type: boolean

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    if: github.event.inputs.target == 'testpypi' || (github.event.inputs.target == 'pypi' && github.event.inputs.skip_test != 'true')
    runs-on: ubuntu-latest
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to TestPyPI (Token Auth)
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}
      run: |
        pip install twine
        twine upload --repository testpypi dist/* --skip-existing --verbose
    
    - name: Test installation from TestPyPI
      run: |
        sleep 10  # Give TestPyPI time to process
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ cursor-eta
        python -c "import cursor_eta; print(f'Successfully installed cursor-eta {cursor_eta.__version__}')"

  publish-pypi:
    name: Publish to PyPI
    needs: [build, publish-testpypi]
    if: always() && (needs.publish-testpypi.result == 'success' || needs.publish-testpypi.result == 'skipped') && github.event.inputs.target == 'pypi'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI (Token Auth)
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        pip install twine
        twine upload dist/* --skip-existing --verbose
    
    - name: Verify installation from PyPI
      run: |
        sleep 30  # Give PyPI time to process
        pip install cursor-eta
        cursor-eta check